// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: shard_snapshots_service.proto

package go_client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardSnapshotPriority int32

const (
	ShardSnapshotPriority_ShardSnapshotPriorityNoSync        ShardSnapshotPriority = 0 // Restore snapshot without *any* additional synchronization
	ShardSnapshotPriority_ShardSnapshotPrioritySnapshot      ShardSnapshotPriority = 1 // Prefer snapshot data over the current state
	ShardSnapshotPriority_ShardSnapshotPriorityReplica       ShardSnapshotPriority = 2 // Prefer existing data over the snapshot
	ShardSnapshotPriority_ShardSnapshotPriorityShardTransfer ShardSnapshotPriority = 3 // Internal priority to use during snapshot shard transfer
)

// Enum value maps for ShardSnapshotPriority.
var (
	ShardSnapshotPriority_name = map[int32]string{
		0: "ShardSnapshotPriorityNoSync",
		1: "ShardSnapshotPrioritySnapshot",
		2: "ShardSnapshotPriorityReplica",
		3: "ShardSnapshotPriorityShardTransfer",
	}
	ShardSnapshotPriority_value = map[string]int32{
		"ShardSnapshotPriorityNoSync":        0,
		"ShardSnapshotPrioritySnapshot":      1,
		"ShardSnapshotPriorityReplica":       2,
		"ShardSnapshotPriorityShardTransfer": 3,
	}
)

func (x ShardSnapshotPriority) Enum() *ShardSnapshotPriority {
	p := new(ShardSnapshotPriority)
	*p = x
	return p
}

func (x ShardSnapshotPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardSnapshotPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_shard_snapshots_service_proto_enumTypes[0].Descriptor()
}

func (ShardSnapshotPriority) Type() protoreflect.EnumType {
	return &file_shard_snapshots_service_proto_enumTypes[0]
}

func (x ShardSnapshotPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardSnapshotPriority.Descriptor instead.
func (ShardSnapshotPriority) EnumDescriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{0}
}

type CreateShardSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
}

func (x *CreateShardSnapshotRequest) Reset() {
	*x = CreateShardSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShardSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShardSnapshotRequest) ProtoMessage() {}

func (x *CreateShardSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShardSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateShardSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateShardSnapshotRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CreateShardSnapshotRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ListShardSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
}

func (x *ListShardSnapshotsRequest) Reset() {
	*x = ListShardSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShardSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardSnapshotsRequest) ProtoMessage() {}

func (x *ListShardSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*ListShardSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListShardSnapshotsRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ListShardSnapshotsRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type DeleteShardSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"` // Name of the collection
	ShardId        uint32 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                     // Id of the shard
	SnapshotName   string `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`       // Name of the shard snapshot
}

func (x *DeleteShardSnapshotRequest) Reset() {
	*x = DeleteShardSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShardSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShardSnapshotRequest) ProtoMessage() {}

func (x *DeleteShardSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShardSnapshotRequest.ProtoReflect.Descriptor instead.
func (*DeleteShardSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteShardSnapshotRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DeleteShardSnapshotRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *DeleteShardSnapshotRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

type RecoverShardSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionName   string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`                                          // Name of the collection
	ShardId          uint32                 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`                                                              // Id of the shard
	SnapshotLocation *ShardSnapshotLocation `protobuf:"bytes,3,opt,name=snapshot_location,json=snapshotLocation,proto3" json:"snapshot_location,omitempty"`                                    // Location of the shard snapshot
	SnapshotPriority ShardSnapshotPriority  `protobuf:"varint,4,opt,name=snapshot_priority,json=snapshotPriority,proto3,enum=qdrant.ShardSnapshotPriority" json:"snapshot_priority,omitempty"` // Priority of the shard snapshot
}

func (x *RecoverShardSnapshotRequest) Reset() {
	*x = RecoverShardSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverShardSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverShardSnapshotRequest) ProtoMessage() {}

func (x *RecoverShardSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverShardSnapshotRequest.ProtoReflect.Descriptor instead.
func (*RecoverShardSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{3}
}

func (x *RecoverShardSnapshotRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *RecoverShardSnapshotRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *RecoverShardSnapshotRequest) GetSnapshotLocation() *ShardSnapshotLocation {
	if x != nil {
		return x.SnapshotLocation
	}
	return nil
}

func (x *RecoverShardSnapshotRequest) GetSnapshotPriority() ShardSnapshotPriority {
	if x != nil {
		return x.SnapshotPriority
	}
	return ShardSnapshotPriority_ShardSnapshotPriorityNoSync
}

type ShardSnapshotLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//
	//	*ShardSnapshotLocation_Url
	//	*ShardSnapshotLocation_Path
	Location isShardSnapshotLocation_Location `protobuf_oneof:"location"`
}

func (x *ShardSnapshotLocation) Reset() {
	*x = ShardSnapshotLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardSnapshotLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardSnapshotLocation) ProtoMessage() {}

func (x *ShardSnapshotLocation) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardSnapshotLocation.ProtoReflect.Descriptor instead.
func (*ShardSnapshotLocation) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{4}
}

func (m *ShardSnapshotLocation) GetLocation() isShardSnapshotLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *ShardSnapshotLocation) GetUrl() string {
	if x, ok := x.GetLocation().(*ShardSnapshotLocation_Url); ok {
		return x.Url
	}
	return ""
}

func (x *ShardSnapshotLocation) GetPath() string {
	if x, ok := x.GetLocation().(*ShardSnapshotLocation_Path); ok {
		return x.Path
	}
	return ""
}

type isShardSnapshotLocation_Location interface {
	isShardSnapshotLocation_Location()
}

type ShardSnapshotLocation_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"` // URL of the remote shard snapshot
}

type ShardSnapshotLocation_Path struct {
	Path string `protobuf:"bytes,2,opt,name=path,proto3,oneof"` // Path of the local shard snapshot
}

func (*ShardSnapshotLocation_Url) isShardSnapshotLocation_Location() {}

func (*ShardSnapshotLocation_Path) isShardSnapshotLocation_Location() {}

type RecoverSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"` // Time in seconds spent to process request
}

func (x *RecoverSnapshotResponse) Reset() {
	*x = RecoverSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_snapshots_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverSnapshotResponse) ProtoMessage() {}

func (x *RecoverSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shard_snapshots_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverSnapshotResponse.ProtoReflect.Descriptor instead.
func (*RecoverSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_shard_snapshots_service_proto_rawDescGZIP(), []int{5}
}

func (x *RecoverSnapshotResponse) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_shard_snapshots_service_proto protoreflect.FileDescriptor

var file_shard_snapshots_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x17, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x60, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x4a, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x64, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x11, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0xa5, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x1b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x03, 0x32, 0xe3, 0x02,
	0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x53, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x22, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x21, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x64, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0c, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x71, 0x64,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x71, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x15, 0xaa, 0x02, 0x12, 0x51, 0x64, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_shard_snapshots_service_proto_rawDescOnce sync.Once
	file_shard_snapshots_service_proto_rawDescData = file_shard_snapshots_service_proto_rawDesc
)

func file_shard_snapshots_service_proto_rawDescGZIP() []byte {
	file_shard_snapshots_service_proto_rawDescOnce.Do(func() {
		file_shard_snapshots_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_shard_snapshots_service_proto_rawDescData)
	})
	return file_shard_snapshots_service_proto_rawDescData
}

var file_shard_snapshots_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shard_snapshots_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_shard_snapshots_service_proto_goTypes = []interface{}{
	(ShardSnapshotPriority)(0),          // 0: qdrant.ShardSnapshotPriority
	(*CreateShardSnapshotRequest)(nil),  // 1: qdrant.CreateShardSnapshotRequest
	(*ListShardSnapshotsRequest)(nil),   // 2: qdrant.ListShardSnapshotsRequest
	(*DeleteShardSnapshotRequest)(nil),  // 3: qdrant.DeleteShardSnapshotRequest
	(*RecoverShardSnapshotRequest)(nil), // 4: qdrant.RecoverShardSnapshotRequest
	(*ShardSnapshotLocation)(nil),       // 5: qdrant.ShardSnapshotLocation
	(*RecoverSnapshotResponse)(nil),     // 6: qdrant.RecoverSnapshotResponse
	(*CreateSnapshotResponse)(nil),      // 7: qdrant.CreateSnapshotResponse
	(*ListSnapshotsResponse)(nil),       // 8: qdrant.ListSnapshotsResponse
	(*DeleteSnapshotResponse)(nil),      // 9: qdrant.DeleteSnapshotResponse
}
var file_shard_snapshots_service_proto_depIdxs = []int32{
	5, // 0: qdrant.RecoverShardSnapshotRequest.snapshot_location:type_name -> qdrant.ShardSnapshotLocation
	0, // 1: qdrant.RecoverShardSnapshotRequest.snapshot_priority:type_name -> qdrant.ShardSnapshotPriority
	1, // 2: qdrant.ShardSnapshots.CreateShard:input_type -> qdrant.CreateShardSnapshotRequest
	2, // 3: qdrant.ShardSnapshots.ListShard:input_type -> qdrant.ListShardSnapshotsRequest
	3, // 4: qdrant.ShardSnapshots.DeleteShard:input_type -> qdrant.DeleteShardSnapshotRequest
	4, // 5: qdrant.ShardSnapshots.RecoverShard:input_type -> qdrant.RecoverShardSnapshotRequest
	7, // 6: qdrant.ShardSnapshots.CreateShard:output_type -> qdrant.CreateSnapshotResponse
	8, // 7: qdrant.ShardSnapshots.ListShard:output_type -> qdrant.ListSnapshotsResponse
	9, // 8: qdrant.ShardSnapshots.DeleteShard:output_type -> qdrant.DeleteSnapshotResponse
	6, // 9: qdrant.ShardSnapshots.RecoverShard:output_type -> qdrant.RecoverSnapshotResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_shard_snapshots_service_proto_init() }
func file_shard_snapshots_service_proto_init() {
	if File_shard_snapshots_service_proto != nil {
		return
	}
	file_snapshots_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shard_snapshots_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShardSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_snapshots_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShardSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_snapshots_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShardSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_snapshots_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverShardSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_snapshots_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardSnapshotLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_snapshots_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shard_snapshots_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ShardSnapshotLocation_Url)(nil),
		(*ShardSnapshotLocation_Path)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shard_snapshots_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shard_snapshots_service_proto_goTypes,
		DependencyIndexes: file_shard_snapshots_service_proto_depIdxs,
		EnumInfos:         file_shard_snapshots_service_proto_enumTypes,
		MessageInfos:      file_shard_snapshots_service_proto_msgTypes,
	}.Build()
	File_shard_snapshots_service_proto = out.File
	file_shard_snapshots_service_proto_rawDesc = nil
	file_shard_snapshots_service_proto_goTypes = nil
	file_shard_snapshots_service_proto_depIdxs = nil
}
